<?xml version="1.0" encoding="iso-8859-1"?>
<xml>
    <include src="settings/generic.xml"/>
    <synopsis
    	name="RComponent"
    	description="belongs to a Glyph, refers to other Glyphs"
    	keywords="objects, glyph, contour, component"/>
    <title>RoboFab Objects: RComponent</title>
    

<div id="titlepic">
	<img src="img/offdrawmodel_26.gif" alt="" border="0"/>
</div>


    <div class="content">
    <h1>RoboFab RComponent</h1>

    <h3>Usage</h3>
 

	<pythonsource src="examples/usageComponent.py"/>
	
<python type="output"><![CDATA[
< RComponent for Excellent-Regular.adieresis.components[0] >
< RComponent for Excellent-Regular.adieresis.components[1] >
]]></python>


    <h3>Description</h3>
    <p>
A component can be a part of a glyph and it is a reference to another glyph in the same font. With components you can make glyphs depend on other glyphs. Changes to the baseGlyph will reflect in the component as well. Fontographer and RoboFog called them <strong>composites</strong>. The <strong>parent</strong> of a component is usually a glyph. Components can be decomposed: they replace themselves with the actual outlines from the baseGlyph. When that happens the link between the original and the component is broken: changes to the baseGlyph will no longer reflect in the glyph that had the component.
    </p>
	<h3>Attributes</h3>
		<ul>
		<li><strong>baseGlyph</strong>: the name of the glyph the component points to. The glyph is assumed to be present in the same font. <strong>Note:</strong> in FontLab this attribute is readonly.</li>
<li><strong>index</strong>: the index of the component in the list of components in the parent glyph. i.e. the first component in a glyph has index 0.</li>
<li><strong>offset</strong>: offset vector (x, y). The distance the component has been moved.
</li>
<li><strong>scale</strong>: scale (x, y). The distance the component has been moved.
</li>
<li><strong>box</strong>: the bounding box for the component (read only).
</li>
		</ul>
	<h3>Attribute examples</h3>
	
	<pythonsource src="examples/componentAttributes.py"/>

<python type="output"><![CDATA[
a
dieresis
]]></python>

    <h3>Methods</h3>
    <p>
    </p>
		<ul>
		<li><strong>decompose()</strong>: in the parent glyph replace this component object with the actual contours. This practically ends the existence of the component object.</li>
		<li><strong>move((x, y))</strong>: move the component to position (x, y)</li>
		<li><strong>draw(aPen)</strong>: draw this component with aPen</li>
		<li><strong>drawPoints(aPointPen)</strong>: draw this component with aPointPen. Note: both these drawing methods are usually called by aGlyph.draw() and aGlyph.drawPoints() as part of the drawing process.</li>
		<li><strong>copy()</strong>: return a deep copy of the object.</li>
		<li><strong>setChanged()</strong>: call to indicate that something about the component has changed.</li>
		</ul>
	<h3>Method examples</h3>
	<pythonsource src="examples/componentMethods.py"/>
    
     </div>
</xml>